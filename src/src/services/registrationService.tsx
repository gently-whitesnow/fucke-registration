export const ValidateRace = (race: string): string => {
  if (race.trim() === '') {
    return 'Не задан идентификатор групповой принадлежности: поле этнокультурной идентичности должно быть заполнено';
  }

  return '';
};

export const ValidateLogin = (login: string): string => {
  const fibonacciLength = 21; // Восьмое число Фибоначчи, представляющее длину идентификатора

  const isNumeric = /^\d+$/.test(login); // Проверка, что все символы — цифры
  const isValidLength = login.length === fibonacciLength; // Проверка длины

  if (!isNumeric || !isValidLength) {
    return 'Маркер инициации отклонен: идентификатор должен включать символы цифровой последовательности и его количество символов должно быть равно 8 числу Фибоначи для соответствия протоколу транс-гипотетической безопасности';
  }

  return '';
};

export const ValidatePassword = (
  password1: string,
  password2: string,
  password3: string,
): string => {
  const strongPasswordRegex =
    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@#$%^&*()\-_=+{}[\]|;:'",.<>?/~`!])[A-Za-z\d@#$%^&*()\-_=+{}[\]|;:'",.<>?/~`!]{12,}$/;
  const isStrong = strongPasswordRegex.test(password1);

  if (!isStrong || password1 !== password2 || password1 !== password3) {
    return 'Ошибка аутентификационного процесса: для успешной инициализации субъекта необходимо задать уникальный криптографический вектор. Аутентификационный код субъекта должен иметь минимальную длину в 12 символов и включать разнообразные атрибуты — по крайней мере одну заглавную и одну строчную букву, один цифровой символ и один специальный идентификатор (@, #, $, %, &, *, и т.д.). Пробелы запрещены, чтобы избежать нарушения целостности структуры. Параметры Репликация аутентификационного кода и Рекурсивное подтверждение криптографического вектора должны строго дублировать первичный код для завершения процесса инициализации';
  }

  return '';
};

export const ValidatePhone = (phone: string): string => {
  const phoneRegex = /^\+\d{2}-[A-Z]{3}-\d{3}-\d{4}-\d[A-Z]$/;
  const isValid = phoneRegex.test(phone);

  if (!isValid) {
    return 'Ошибка идентификации канала связи: параметр Уникальный идентификатор голосового канала связи должен соответствовать межгалактическому формату связи, включающему 10-15 цифровых символов без пробелов и дополнительных знаков (+00-ZZZ-000-0000-0Z). Проверьте структуру идентификатора, чтобы избежать несоответствия протоколу установления связи.';
  }

  return '';
};

export const ValidateEmail = (email: string): string => {
  const emailRegex = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\.[a-zA-Z0-9]+\.[a-zA-Z0-9]+$/;
  const isValid = emailRegex.test(email);

  if (!isValid) {
    return 'Ошибка идентификации узла корреспонденции: формат адреса не соответствует требованиям межгалактического протокола связи. Убедитесь, что введенный идентификатор имеет структуру <имя_субъекта>@<код_планеты>.<сектор_галактики>.<код_системы>, где все сегменты должны быть уникально обозначены и содержать допустимые буквенно-числовые параметры. Повторите ввод, соблюдая спецификации для корректного маршрутизации сообщений.';
  }

  return '';
};
